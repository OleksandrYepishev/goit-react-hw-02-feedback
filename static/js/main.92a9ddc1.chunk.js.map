{"version":3,"sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.styled.js","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/App.jsx","index.js"],"names":["MainContainer","styled","div","Container","children","Statistics","props","good","neutral","bad","total","positiveFeedbacks","Btn","button","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","type","onClick","Section","title","App","state","OnInrement","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAEaA,EAAgBC,IAAOC,IAAV,6H,OCAbC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACvB,cAACJ,EAAD,UAAgBI,KCALC,EAAa,SAACC,GACzB,IAAQC,EAAiDD,EAAjDC,KAAMC,EAA2CF,EAA3CE,QAASC,EAAkCH,EAAlCG,IAAKC,EAA6BJ,EAA7BI,MAAOC,EAAsBL,EAAtBK,kBAEnC,OACE,eAAC,WAAD,WACE,wCAAWJ,KACX,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCVOC,EAAMX,IAAOY,OAAV,+GCCHC,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAOzC,OAAOC,OAAOC,KAAKH,GAASI,KANV,SAACC,GAAD,OAChB,cAACR,EAAD,CAAkBS,KAAK,SAASC,QAAS,kBAAMN,EAAgBI,IAA/D,SACGA,GADOA,OCFDG,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOpB,EAAe,EAAfA,SAC/B,OACE,eAAC,WAAD,WACE,mCAAMoB,KACLpB,MCAMqB,EAAb,4MACEC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAOEkB,WAAa,SAACP,GACZ,EAAKQ,UAAS,SAACC,GACb,OAAO,eACJT,EAASS,EAAUT,GAAU,OAVtC,EAeEU,mBAAqB,WACnB,MAA+B,EAAKJ,MAEpC,OAFA,EAAQnB,KAAR,EAAcC,QAAd,EAAuBC,KAhB3B,EAoBEsB,gCAAkC,WAChC,MAA+B,EAAKL,MAA5BnB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OAAOuB,KAAKC,MAAc,IAAP1B,GAAeA,EAAOC,EAAUC,KAvBvD,4CA0BE,WACE,MAA+ByB,KAAKR,MAA5BnB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASe,MAAM,wBAAf,SACE,cAAC,EAAD,CACET,QAASmB,KAAKR,MACdV,gBAAiBkB,KAAKP,eAGzBpB,GAAQC,GAAWC,EAAM,EACxB,cAAC,EAAD,CAASe,MAAM,aAAf,SACE,cAAC,EAAD,CACEjB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,KAAKJ,qBACZnB,kBAAmBuB,KAAKH,sCAI5B,yDAhDV,GAAyBI,a,MCFzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.92a9ddc1.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const MainContainer = styled.div`\n  max-width: 1170px;\n  margin-left: auto;\n  padding: 40px 15px 0 15px;\n  margin-right: auto;\n`;\n","import { MainContainer } from \"./Container.styled\";\n\nexport const Container = ({ children }) => (\n  <MainContainer>{children}</MainContainer>\n);\n","import { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Statistics = (props) => {\n  const { good, neutral, bad, total, positiveFeedbacks } = props;\n\n  return (\n    <Fragment>\n      <p> good: {good}</p>\n      <p>neutral: {neutral}</p>\n      <p>bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positiveFeedbacks}%</p>\n    </Fragment>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveFeedbacks: PropTypes.number.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Btn = styled.button`\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  width: 200px;\n  height: 50px;\n`;\n","import PropTypes from \"prop-types\";\nimport { Btn } from \"./FeedbackOptions.styled\";\n\nexport const FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const createBtn = (option) => (\n    <Btn key={option} type=\"button\" onClick={() => onLeaveFeedback(option)}>\n      {option}\n    </Btn>\n  );\n\n  return Object.keys(options).map(createBtn);\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.shape({}).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Fragment>\n      <h2> {title}</h2>\n      {children}\n    </Fragment>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import React, { Component } from \"react\";\n// import { FeedBackOptions } from './FeedBackOptions/FeedBackOptions\nimport { Container } from \"./Container/Container\";\nimport { Statistics } from \"./Statistics/Statistics\";\nimport { FeedbackOptions } from \"./FeedbackOptions/FeedbackOptions\";\nimport { Section } from \"./Section/Section\";\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  OnInrement = (option) => {\n    this.setState((prevState) => {\n      return {\n        [option]: prevState[option] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n\n    return Math.round((good * 100) / (good + neutral + bad));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.OnInrement}\n          />\n        </Section>\n        {good || neutral || bad > 0 ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positiveFeedbacks={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        ) : (\n          <p>No feedback given</p>\n        )}\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}