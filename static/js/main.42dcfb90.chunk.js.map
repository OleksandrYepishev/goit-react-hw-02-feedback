{"version":3,"sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/App.styled.js","components/App.jsx","index.js"],"names":["MainContainer","styled","div","Container","children","Btn","button","App","state","good","neutral","bad","OnInrement","option","setState","prevState","createBtn","type","onClick","createBtns","Object","keys","map","totalfeedbacks","positivePercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAEaA,EAAgBC,IAAOC,IAAV,6H,OCAbC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACvB,cAACJ,EAAD,UAAgBI,KCDLC,EAAMJ,IAAOK,OAAV,+GCGHC,EAAb,4MACEC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAOEC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACC,GACb,OAAO,eACJF,EAASE,EAAUF,GAAU,OAVtC,EAeEG,UAAY,SAACH,GAAD,OACV,cAACR,EAAD,CAAkBY,KAAK,SAASC,QAAS,kBAAM,EAAKN,WAAWC,IAA/D,SACGA,GADOA,IAhBd,EAqBEM,WAAa,kBAAMC,OAAOC,KAAK,EAAKb,OAAOc,IAAI,EAAKN,YArBtD,EAuBEO,eAAiB,qBAAGd,KAAH,EAASC,QAAT,EAAkBC,KAvBrC,EAwBEa,mBAAqB,gBAAGf,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAlB,OACnBc,KAAKC,MAAc,IAAPjB,GAAeA,EAAOC,EAAUC,KAzBhD,4CA2BE,WACE,MAA+BgB,KAAKnB,MAA5BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,eAAC,EAAD,WACE,uDAEE,8BAAMgB,KAAKR,kBAEb,4CAEEV,GAAQC,GAAWC,EAAM,EACvB,qCACE,wCAAWF,KACX,0CAAaC,KACb,sCAASC,KACT,wCAAWgB,KAAKJ,eAAe,CAAEd,OAAMC,UAASC,WAChD,mDACqB,IAClBgB,KAAKH,mBAAmB,CAAEf,OAAMC,UAASC,QAF5C,UAMF,yDAjDZ,GAAyBiB,a,MCAzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.42dcfb90.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const MainContainer = styled.div`\n  max-width: 1170px;\n  margin-left: auto;\n  padding: 40px 15px 0 15px;\n  margin-right: auto;\n`;\n","import { MainContainer } from \"./Container.styled\";\n\nexport const Container = ({ children }) => (\n  <MainContainer>{children}</MainContainer>\n);\n","import styled from \"@emotion/styled\";\n\nexport const Btn = styled.button`\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  width: 200px;\n  height: 50px;\n`;\n","import React, { Component } from \"react\";\n// import { FeedBackOptions } from './FeedBackOptions/FeedBackOptions\nimport { Container } from \"./Container/Container\";\nimport { Btn } from \"./App.styled\";\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  OnInrement = (option) => {\n    this.setState((prevState) => {\n      return {\n        [option]: prevState[option] + 1,\n      };\n    });\n  };\n\n  createBtn = (option) => (\n    <Btn key={option} type=\"button\" onClick={() => this.OnInrement(option)}>\n      {option}\n    </Btn>\n  );\n\n  createBtns = () => Object.keys(this.state).map(this.createBtn);\n\n  totalfeedbacks = ({ good, neutral, bad }) => good + neutral + bad;\n  positivePercentage = ({ good, neutral, bad }) =>\n    Math.round((good * 100) / (good + neutral + bad));\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <Container>\n        <h1>\n          Please leave feedback\n          <div>{this.createBtns()}</div>\n        </h1>\n        <h2>Statistics</h2>\n        {\n          good || neutral || bad > 0 ? (\n            <>\n              <p> good: {good}</p>\n              <p>neutral: {neutral}</p>\n              <p>bad: {bad}</p>\n              <p>Total: {this.totalfeedbacks({ good, neutral, bad })}</p>\n              <p>\n                Positive feedback:{\" \"}\n                {this.positivePercentage({ good, neutral, bad })}%\n              </p>\n            </>\n          ) : (\n            <p>No feedback given</p>\n          )\n          // : (<Notification message=\"No feedback given\"></Notification>)\n        }\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}